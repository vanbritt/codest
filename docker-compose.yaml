version: "3.8"
services:
  mysql-db:
    image: mysql:8.0.28
    container_name: mysql-db
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    networks:
      - backend-network
  backend:
    depends_on:
      mysql-db:
        condition: service_healthy
    build: ./backend
    container_name: backend
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
         "spring.datasource.url"  : "jdbc:mysql://mysql-db:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
         "spring.datasource.username" : "$MYSQLDB_USER",
         "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
         "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL8Dialect",
         "spring.jpa.hibernate.ddl-auto" : "create"
       }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    networks:
      - backend-network
  front-end:
    build: ./front-end
    container_name: front-end
    depends_on:
      - backend
    ports:
    - '4200:80'
    networks:
      - frontend-network
volumes:
  db:
networks:
  backend-network:
  frontend-network: